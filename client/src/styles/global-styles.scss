@import './_variables.scss';
@import './_mixins.scss';

html, body {
  width: 100%;
  height: 100%;
  overflow: hidden;

  font-family: Verdana, sans-serif;
  font-size: 14px;
  line-height: var(--line-height);
  font-weight: normal;
  color: var(--color);
}

* { box-sizing: border-box; }

::selection {
  background: var(--selection-color);
}
::-moz-selection {
  background: var(--selection-color);
}
::-moz-focus-inner { border: 0; }


*::-webkit-scrollbar {
  width: 10px;
  background-color: rgba(0, 0, 0, 0.05);
}
*::-webkit-scrollbar-track {
  background-color: transparent;
}
*::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background-color: rgba(0, 0, 0, 0.1);
  box-shadow: inset 0 0 6px rgba(0,0,0,.2);
}

.vbox {
  display: flex;
  flex-direction: column;
}
.hbox {
  display: flex;
  flex-direction: row;
}
.center {
  @include center;
}
.hcenter {
  @include hcenter;
}
.vcenter {
  @include vcenter;
}
.center>*,
.hcenter>*,
.vcenter>* {
  flex: 1 1;
}
.text-center {
  text-align: center;
}

.inline {
  display: inline-block;
}
.block {
  display: block;
}

.row {
  display: flex;
  flex-direction: row;
  padding: calc(2 * var(--padding));
}
.row > * {
  flex: 0 0 auto;
  margin-right: $padding;
}
.fill {
  flex: 1 1;
}
.static {
  flex: 0 0 auto;
}

.line {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.title {
  margin-right: var(--padding);
  font-family: Ubuntu, Roboto, Arial, sans-serif;
  font-size: 14px;
  line-height: 30px;
  font-weight: bold;
  color: $text-color-highlight;
  text-transform: uppercase;
}

.label {
  font-family: Ubuntu, Roboto, Arial, sans-serif;
  font-size: 12px;
  line-height: 30px;
  font-weight: bold;
}
.label.small {
  font-size: 12px;
  line-height: 20px;
  height: 20px;
}
.label.large {
  font-size: 18px;
}
.label.editable.full {
  width: 100%;
}
div.label.editable {
  transition: all .25s;
  cursor: pointer;
  text-transform: none;
}
div.label.editable:hover {
  background-color: var(--hover-light-bg-color);
}
div.label.editable span {
  flex: 1;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
div.label.editable .Icon {
  margin: var(--padding);
  height: 100%;
  opacity: 0;
  color: #ddd;
  transition: opacity .25s;
  flex: 0 0;
}
div.label.editable:hover .Icon {
  opacity: 1;
}
input.label.editable {
  color: inherit;
  background-color: transparent;
  border: none;
  padding: 0;
}

.text {
  --line-height: 20px;
  font-family: Ubuntu, Roboto, Arial, sans-serif;
  font-size: 12px;
  line-height: var(--line-height);
  font-weight: normal;
}
.text.small {
  font-size: 12px;
  line-height: 25px;
}
.text.large {
  font-size: 18px;
}
.text.editable {
  position: relative;
  width: 100%;
  min-height: calc(3 * var(--line-height));
}
div.text.editable {
  transition: all .25s;
  cursor: pointer;
  text-transform: none;
  white-space: pre;
}
div.text.editable:hover {
  background-color: var(--hover-light-bg-color);
}
div.text.editable > div {
  flex: 1;
  text-overflow: ellipsis;
  overflow: hidden;
}
div.text.editable > .Icon {
  position: absolute;
  top: -1px;
  right: $padding;
  margin: var(--padding);
  height: 100%;
  opacity: 0;
  color: #ddd;
  transition: opacity .25s;
  flex: 0 0;
}
div.text.editable:hover > .Icon {
  opacity: 1;
}
textarea.text.editable {
  color: inherit;
  background-color: transparent;
  border: none;
  border-radius: 2px;
  padding: 0 2px;
  transition: box-shadow .25s;
}
textarea.text.editable:active,
textarea.text.editable:focus {
  outline: none;
  box-shadow: 0 0 0 1px $focus-color;
}



.list {
  min-width: 200px;
}
.list > .group {
  position: relative;
  display: flex;
  width: 100%;
  align-items: center;
  height: 30px;
  padding: 0 calc(2 * var(--padding));
  color: var(--color);
  font-weight: bold;
}
.list > .item {
  display: block;
  color: $text-color-highlight;
  padding: 0 calc(2 * var(--padding));
}
.list > a.item:not(.disabled) {
  transition: all .25s;
  cursor: pointer;
}
.list > a.item:not(.disabled):hover {
  background-color: $hover-light-bg-color;
}
.list > .item.active:not(.disabled),
.list > .item.active:not(.disabled):hover {
  color: white;
  background-color: $focus-color;
}
.list > .separator {
  width: 100%;
  height: calc(2 * var(--padding));
  margin-bottom: calc(2 * var(--padding));
  border-bottom: 1px solid var(--light-border-color);
}

.Input {
  display: inline-block;
}
.Input__element {
  color: var(--light-color);
  background-color: rgba(0, 0, 0, 0.3); //var(--dark-bg-color);
  outline: none;
  border: 1px solid var(--dark-border-color);
  border-radius: 2px;
  padding: 0 8px;
  height: 30px;
  transition: box-shadow .25s;
}
.Input__element:active,
.Input__element:focus {
  outline: none;
  box-shadow: 0 0 0 1px $focus-color;
}
.Input.small {
  line-height: 20px;
}
.Input.small .Input__element {
  font-size: 12px;
  height: 20px;
}
.Input.large {
  line-height: 40px;
}
.Input.large .Input__element {
  height: 40px;
}
.Input.error .Input__element {
  box-shadow: 0 0 0 1px $bg-color-error;
}
.Input.badge .Input__element {
  border-radius: 15px;
  height: 25px;
  width: 100px;
  font-size: 11.2px;
}


.input-label {
  position: relative;
  padding-left: 5px;
  cursor: pointer;
}
.Checkbox {
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  display: inline-block;
  position: relative;
  width: 16px;
  height: 16px;
  font-size: inherit;
  border-radius: 3px;
  background-color: var(--dark-bg-color);
  box-shadow: 0 0 0 1px var(--checkbox-border-color);
  transition: background-color 0.16s cubic-bezier(0.5, 0.15, 0.2, 1);
}
.Checkbox:focus {
  outline: 0;
}
.Checkbox:active {
  background-color: #0f82e6;
}
.Checkbox:before,
.Checkbox:after {
  content: "";
  position: absolute;
  top: 12px;
  left: 6.4px;
  height: 2px;
  border-radius: 1px;
  background-color: #282c34;
  transform-origin: 0 0;
  opacity: 0;
  transition: transform 0.1s cubic-bezier(0.5, 0.15, 0.2, 1), opacity 0.1s cubic-bezier(0.5, 0.15, 0.2, 1);
}
.Checkbox:before {
  width: 5.28px;
  transform: translate3d(0, 0, 0) rotate(225deg) scale(0);
}
.Checkbox:after {
  width: 10.56px;
  margin: -1px;
  transform: translate3d(0, 0, 0) rotate(-45deg) scale(0);
  transition-delay: .05s;
}
.Checkbox:checked {
  background-color: #568af2;
  box-shadow: 0 0 0 1px var(--border-color);
}
.Checkbox:checked:active {
  background-color: #3f444d;
}
.Checkbox:checked:before {
  opacity: 1;
  transform: translate3d(0, 0, 0) rotate(225deg) scale(1);
  transition-delay: .05s;
}
.Checkbox:checked:after {
  opacity: 1;
  transform: translate3d(0, 0, 0) rotate(-45deg) scale(1);
  transition-delay: 0;
}
.Checkbox:indeterminate {
  background-color: #0f82e6;
}
.Checkbox:indeterminate:active {
  background-color: #3f444d;
}
.Checkbox:indeterminate:after {
  opacity: 1;
  transform: translate3d(-2.24px, -4px, 0) rotate(0deg) scale(1);
  transition-delay: 0;
}
.input-label .input-radio,
.input-label .Checkbox,
.input-label .input-toggle {
  margin-top: -0.25em;
  margin-right: 0.3em;
}



.Dropdown {
}
.Dropdown.open > .Button {
  border: 1px solid var(--light-border-color);
  border-bottom: 1px solid transparent;;
  background-color: var(--dark-bg-color);
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.Popup.open,
.Tooltip.visible {
  display: block;
}
.Popup,
.Tooltip {
  display: none;
  z-index: 100;
}
.Popup,
.Tooltip,
.Dropdown__inner {
  position: absolute;
  /* top & left set by tether */
  min-width: 200px;
  padding: calc(2 * var(--padding) - 2px) 0;
  border: 1px solid var(--light-border-color);
  border-radius: 2px;
  color: var(--light-color);
  background-color: var(--dark-bg-color);
  box-shadow: 1px 2px 6px 1px rgba(0, 0, 0, 0.3);
  cursor: default;
}
.Dropdown__inner {
  opacity: 0;
  transform: translateY(-10px);
  transition: all .25s;
  pointer-events: none;
}
.Dropdown.open .Dropdown__inner {
  opacity: 1;
  transform: translateY(0);
  pointer-events: unset;
}
.Tooltip {
  pointer-events: none;
  padding: 0 $padding;
  height: 30px;
  line-height: 30px;
  min-width: unset;
}
.Popup > .item ,
.Dropdown__inner > .item {
  position: relative;
  display: flex;
  width: 100%;
  align-items: center;
  height: 30px;
  padding: 0 calc(2 * var(--padding));
}
.Popup.with-icons > .item ,
.Dropdown.with-icons .Dropdown__inner > .item {
  padding: 0 calc(2 * var(--padding)) 0 (6 * $padding);
}
.Popup > .item[disabled],
.Dropdown__inner > .item[disabled] {
  color: var(--text-color-muted);
}
.Popup > .item:not([disabled]):hover,
.Dropdown__inner > .item:not([disabled]):hover {
  background-color: $focus-color;
  color: #fff;
}
.Popup > .item > .Icon.menu,
.Dropdown__inner > .item > .Icon.menu {
  position: absolute;
  color: var(--color);
  width: calc(2 * var(--padding));
  left: calc(2 * var(--padding));
}
.Popup > .item[disabled] > .Icon.menu,
.Dropdown__inner > .item[disabled] > .Icon.menu {
  color: var(--text-color-disabled);
}
.Popup > .group ,
.Dropdown__inner > .group {
  position: relative;
  display: flex;
  width: 100%;
  align-items: center;
  height: 30px;
  padding: 0 calc(2 * var(--padding));
  color: var(--color);
  font-weight: bold;
}
.Popup > .separator ,
.Dropdown__inner > .separator {
  width: 100%;
  height: calc(2 * var(--padding));
  margin-bottom: calc(2 * var(--padding));
  border-bottom: 1px solid var(--light-border-color);
}



table {
  font-size: inherit;
  border-spacing: 0;
  border-collapse: collapse;
}
tr, td, th {
  padding: 0;
  height: 25px;
  line-height: 0
}

h1 {
  padding: 0 calc(0 * var(--padding));
  margin: 0;
  font-size: 28px;
  font-weight: bold;
  line-height: 40px;
  color: var(--light-color);
}

abbr {
  text-decoration: none;
  border-bottom: 1px solid rgba(white, 0.2);
}

a.link {
  color: $link-color;
  text-decoration: none;
  border-bottom: 1px solid rgba($link-color, 0.5);
  //transition: border-bottom .25s;
}
a.link:visited {
  color: $link-color;
}
a.link:hover {
  //border-bottom: 1px solid $link-color;
}



.text-highlight { color: var(--text-color-highlight); }
.text-success   { color: var(--text-color-success); }
.text-muted     { color: var(--text-color-muted); }
.text-warning   { color: var(--text-color-warning); }
.text-error     { color: var(--text-color-error); }
.text-info      { color: var(--text-color-info); }
.text-subtle    { color: var(--text-color-subtle); }



.EditableList__value {
  color: $text-color-highlight;
  min-width: 220px;
  padding-right: 2 * $padding;
}
.EditableList__control {
  padding-top: 2 * $padding;
}


.drop-zone {
  position: relative;
}
.drop-zone::after {
  position: absolute;
  content: '';
  width: 100%;
  height: 100%;
  border-radius: 5px;
  --border: 3px;
  top: calc(-1 * var(--border));
  left: calc(-1 * var(--border));
  pointer-events: none;
}
.drop-zone.over-document::after {
  border: var(--border) dashed $focus-color;
}
.drop-zone.over::after {
  border: var(--border) dashed lighten($focus-color, 40%);
}


#root {
  width: 100%;
  height: 100%;
  background-color: var(--bg-color);
}

.App {
  width:  100%;
  height: 100%;
}
.App__content {
  width:  100%;
  overflow: hidden;
}
.App__sidebar {
  flex-basis: 0;
  width: 0;
  transform: translateX(calc(-1 * var(--sidebar-size)));
  transition: all .5s;
}
.App__sidebar.visible {
  flex-basis: var(--sidebar-size);
  width: var(--sidebar-size);
  transform: translateX(0);
}
.App__section {
  padding: 0 calc(2 * var(--padding));
}


.Sidebar {
  position: relative;
  height: 100%;
  background-color: var(--dark-bg-color);
}
.Sidebar a {
  color: inherit;
  text-decoration: none;
}
.Sidebar__item {
  width:  var(--sidebar-size);
  height: var(--sidebar-size);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  user-select: none;
  transition: all .25s;
}
.Sidebar__item:hover, .Sidebar__item.active:hover {
  background-color: var(--hover-bg-color);
}
.Sidebar__item.active {
  position: relative;
  background-color: var(--active-bg-color);
}
.Sidebar__border {
  position: absolute;
  height: var(--sidebar-size);
  width: 1px;
  background-color: var(--accent-color);
  left: calc(var(--sidebar-size) - 1px);
  transition: top .15s;
}
.Sidebar__fill {
  flex: 1 1;
}

section {
  flex: 1 1;
}
section.Settings {
  padding: (4 * $padding) (6 * $padding);
}
section.Templates {
  padding: (2 * $padding) 0;
}
section.Samples {
}


$step-width: 40px;

.Samples__table {
  flex: 1 1;
  width: 100%;
  color: var(--table-color);
  background-color: var(--table-bg-color);
  border-left: 1px solid var(--table-border-color);
}
.Samples__header.Sample {
  border-top: 1px solid var(--table-border-color);
  height: 25px;
}
.Samples__header > div {
  line-height: calc(var(--line-height) - 2px);
  font-weight: bold;
}
.Samples__table > .Sample:not(.empty) {
  border-bottom: 1px solid var(--table-border-color);
}
.Sample:nth-child(2n + 1) { /* skip header */
  background-color: var(--table-bg-alt-color);
}
.Sample {
  display: flex;
  flex-direction: row;
  align-items: stretch;
  height: 25px;
}
.Sample:not(.Samples__header) {
  cursor: pointer;
  &:hover {
    background-color: $hover-light-bg-color;
  }
}
.Sample.overdue {
  background-color: rgba($bg-light-color-warning, 0.15);
}
.Sample__empty {
  display: flex;
  flex-direction: row;
  align-items: stretch;
  font-size: 2.5em;
  font-weight: bold;
  padding: 5em 0;
  justify-content: center;
  user-select: none;
}
.Sample > * {
  padding: 0 5px;
}
.Sample > *:first-child {
  width: 250px;
  flex: 0 0 auto;
  padding: 0 calc(2 * var(--padding));
}
.Sample > *:not(:first-child) {
  border-left: 1px solid var(--table-border-color);
}
.Sample__name {
  @include vcenter;
}
.Sample__fill {
  flex: 1 1;
}
.Sample__created {
  width: 100px;
}
.Sample__modified {
  width: 100px;
}
.Sample__notes {
  width: 200px;
}

.Step {
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: $step-width;
  transition: all .25s;
  cursor: pointer;
}
.Step:hover {
  background-color: $hover-light-bg-color;
}
.Step__menu {
  position: absolute;
  min-width: $step-width;
  width: auto;
  padding: 0;
}
.Step__menu > .item {
  justify-content: center;
}


.SampleModal__badges {
  margin-bottom: 2 * $padding;
}
.SampleModal__badges > * {
  margin-right: $padding;
}

.StepsModal {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  transition: all .25s ease-in-out;
  transform: translateY(40px);
}
.Modal.open .StepsModal {
  transform: translateY(0);
}
.StepsModal__content {
  width: max-content;
  transition: all .5s ease-in-out;
}
.StepsModal__left,
.StepsModal__right {
  position: absolute;
  z-index: 3;
  top: 75px;
  background-color: rgba(white, 0.2);
  border-radius: 50%;
  width: 30px;
  height: 30px;
  &[disabled] {
    opacity: 0.6;
  }
  &:not([disabled]):hover {
    background-color: rgba(white, 0.4);
  }
}
.StepsModal__left {
  padding-right: 8px;
  left: -30px;
}
.StepsModal__right {
  padding-left: 8px;
  right: -30px;
}
.StepsModal__step {
  background: $dark-bg-color;
  border-bottom-right-radius: 2px;
  border-bottom-left-radius: 2px;
  box-shadow: 0px 20px 16px 0px rgba(0, 0, 0, 0.3);

  padding: 2 * $padding;

  min-height: 200px;
  width: 600px;
  margin-right: 100px;

  // .Modal:not(.open)
  transition: all .25s;
  //transform: translateY(-20px);
}
.StepsModal__status td {
  padding: 0 2 * $padding;
}
.StepsModal__status td:nth-child(2) {
  text-align: right;
}





.Template {
  display: flex;
  flex-direction: row;
  width: 100%;
  overflow: hidden;
}
.Template .Template__info {
  border-left: 1px solid var(--light-border-color);
}
.Template:not(:last-of-type) .Template__info {
  border-bottom: 1px solid var(--light-border-color);
}
.Template:first-of-type .Steps {
  border-top: 1px solid var(--dark-bg-color);
}
.Template .Steps {
  border-bottom: 1px solid var(--dark-bg-color);
}

.Template__info {
  padding: var(--padding) calc(2 * var(--padding));
  background-color: var(--dark-bg-color);
  width: 175px;
}
.Template__info .delete,
.Template__info .Spinner {
  flex: 0 0 auto;
}
.Template .Steps {
  display: flex;
  flex-direction: row;
  width: 100%;
  overflow: auto;
  padding: calc(var(--padding) - 1px);
}
.TemplateStep {
  height: calc(8 * var(--padding));
  padding: calc(var(--padding) - 1px);
  min-width: 100px;
  border: 1px solid var(--light-border-color);
  border-radius: 2px;
  cursor: pointer;
}
.TemplateStep:not(:last-child) {
  margin-right: var(--padding);
}
.TemplateStep.add:hover {
  background-color: var(--hover-light-bg-color);
}
.TemplateStep input.label.editable {
  width: 0;
}
.TemplateStep .Dropdown {
  flex: 0 0 auto;
}


.CompletionFunctions__list {
  border-left: 1px solid $bg-color;
  background-color: $dark-bg-color;
}
.CompletionFunctions__list > .item {
  display: flex;
  flex-direction: row;
  align-items: center;
}
.CompletionFunctions__list > .item > .content {
  flex: 1 1;
}
.CompletionFunctions__list > .item > .delete-icon {
  padding: $padding;
  border-radius: 2px;
  opacity: 0;
  transition: all .25s;
}
.CompletionFunctions__list > .item:hover > .delete-icon {
  opacity: 1;
}
.CompletionFunctions__list > .item > .delete-icon:hover {
  background-color: $hover-light-bg-color;
}
.CompletionFunctions__editor {
  flex: 1 1;
}


